'use strict';

module.exports = function(grunt) {

      // Please see the Grunt documentation for more information regarding task
      // creation: http://gruntjs.com/creating-tasks

    grunt.registerMultiTask('thorDocManager', 'Documentation manager for javascript projects.', function() {
        // Merge task-specific and/or target-specific options with these defaults.
        var options = this.options();

        this.files.forEach(function(f) {
            f.src.filter(function(filepath) {
                // Warn on and remove invalid source files (if nonull was set).
                if (!grunt.file.exists(filepath)) {
                    grunt.log.warn('Source file "' + filepath + '" not found.');
                    return false;
                } else {
                    return true;
                }
            }).map(function(filepath) {
                var src = grunt.file.read(filepath);
                var functions = src.split('function ');
                var i = 0;
                var functionsLength = functions.length;
                var docs = 0;
                var nodocs = 0;
                var checked = 0;
                var created = 0;
                var withFiles = {};
                for (i; i < functionsLength; i++) {
                    var name = functions[i].substr(0, functions[i].indexOf('(')).replace(/\s+/g,"");
                    
                    if(name!==''){
                        checked++;
                        var docName = options.docPath+name+'.'+options.docExtension;
                        if (!grunt.file.exists(docName)) {
                            nodocs++;
                            if(!options.createDocs){
                                grunt.log.warn('Doc file for "' + name + '" function not found.');
                            }else{
                               var content =   '<!doctype html>\n'+
                                                '<html>\n'+
                                                '<head>\n'+
                                                    '\n<meta charset="UTF-8">\n'+
                                                    '\n<title>Docs for '+ name +' function!</title>\n'+
                                                    '\n<link rel="stylesheet" href="style/default.css">\n'+
                                                '</head>\n'+
                                                '<body>\n'+
                                                    '\t<h2>'+name+'()</h2>\n'+
                                                    '\t<p>This is '+name+'() docs.</p>\n'+
                                                '</body>\n'+
                                                '</html>\n';

                                grunt.file.write(docName, content);
                                created++;
                                grunt.log.warn('Doc file for "' + name + '" function not found, but it has been created.');
                                withFiles[name] = docName;
                            }
                        }else{
                            withFiles[name] = docName;
                            docs++;
                        }
                    }
                }

                if(options.createDocs){
                    var content =   '<!doctype html>\n'+
                                    '<html>\n'+
                                    '<head>\n'+
                                        '\n<meta charset="UTF-8">\n'+
                                        '\n<title>Docs for ThorJS!</title>\n'+
                                        '\n<link rel="stylesheet" href="docs/style/default.css">\n'+
                                    '</head>\n'+
                                    '<body>\n'+
                                        '\t<h2>Thor functions:</h2>\n'+
                                        '\t<ul>\n';
                    for(var p in withFiles)
                        content += '\t\t<li><a href="'+withFiles[p]+'" title="See '+p+' function documentation">'+p+'</a></li>\n';
                    
                    content +=  '\t</ul>\n'+
                                '</body>\n'+
                                '</html>\n';

                    grunt.file.write('index.html', content);
                }


                grunt.log.ok(checked+' functions checked.');
                if(docs > 0)
                    grunt.log.ok(docs+' functions documented.');
                if(nodocs > 0)
                    grunt.log.warn(nodocs+' functions without documentation.');
                if(created > 0)
                    grunt.log.warn(created+' created files.');

                if(nodocs > 0 && created < 1){
                    grunt.log.warn('If you want DocManager generating doc files, set option "createDocs" to true!');                    
                }

            });
        });
    });
};
